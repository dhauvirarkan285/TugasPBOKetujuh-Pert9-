/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tugaspert9;

/**
 *
 * @author RAISSA
 */
import tugaspert9.EksekutorJRXML;
import java.sql.Connection;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;

public class EksekutorFile extends JFrame {
    private DefaultTableModel model;
    // Komponen GUI (Generated Code)
    public EksekutorFile() {
    // Layout frame
    initComponents(); // pastikan ini pertama
    model = new DefaultTableModel(new Object[]{"ID","Nama","Jumlah","Mulai Dinas","P24 Terakhir","P24 Selanjutnya"},0);
    jTable1.setModel(model); // pasang model ke JTable dari GUI
    setTitle("Eksekutor File");
    setSize(500, 400);
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setLayout(new BorderLayout());

    model = new DefaultTableModel(new Object[]{"ID", "Nama", "Jumlah"}, 0);
    jTable1.setModel(model);

    initButtonActions();
    // Masukkan JTable ke JScrollPane
    JScrollPane scrollPane = new JScrollPane(jTable1);
    add(scrollPane, BorderLayout.CENTER);

    // Tombol
    JPanel panelTombol = new JPanel();
    btnTambahkan = new JButton("Tambahkan");
    btnHapus = new JButton("Hapus");
    panelTombol.add(btnTambahkan);
    panelTombol.add(btnHapus);
    add(panelTombol, BorderLayout.SOUTH);

    // Listener tombol
    btnTambahkan.addActionListener(e -> new InsertPenambahan(this).setVisible(true));
    btnHapus.addActionListener(e -> hapusBaris(jTable1.getSelectedRow()));
}

    private void initButtonActions() {
        btnTambahkan.addActionListener(evt -> {
            InsertPenambahan insertForm = new InsertPenambahan(this); // BENAR
insertForm.setVisible(true);
        });

        btnUbah.addActionListener(evt -> {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
                UpdatePerubahan updateForm = new UpdatePerubahan(this, selectedRow);
                updateForm.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Pilih baris yang akan diubah terlebih dahulu!");
            }
        });

        btnHapus.addActionListener(evt -> {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
                int confirm = JOptionPane.showConfirmDialog(this,
                        "Apakah Anda yakin ingin menghapus baris ini?",
                        "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    model.removeRow(selectedRow);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus terlebih dahulu!");
            }
        });

        btnCetak.addActionListener(evt -> {
    try {
        EksekutorJRXML.cetakDariDB(
            MyConnection.getConnection(),              // Connection DB
            "Laporan Data Kepemilikan",               // Judul laporan
            "src/tugaspert9/DataKepemilikan.jrxml",  // Path file JRXML
            "SELECT * FROM armada ORDER BY nomor_armada" // Query
        );
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this,
            "Gagal mencetak: " + ex.getMessage(),
            "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Supaya terlihat di console error detailnya
    }
});
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnTambahkan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                             DATA JUMLAH ARMADA YANG DIMILIKI");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnTambahkan.setText("Tambahkan");
        btnTambahkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahkanActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");

        btnHapus.setText("Hapus");

        btnCetak.setText("Cetak");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTambahkan, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCetak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambahkan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahkanActionPerformed
InsertPenambahan insertForm = new InsertPenambahan(this); // BENAR
insertForm.setVisible(true);
    }//GEN-LAST:event_btnTambahkanActionPerformed
    public JTable getJTable() {
        return this.jTable1; // Getter untuk diakses UpdatePerubahan
    }

    public void ubahData(int rowIndex, String nomor, String jenis, String mulaiDinas, String p24Terakhir, String p24Selanjutnya) {
        model.setValueAt(nomor, rowIndex, 0);
        model.setValueAt(jenis, rowIndex, 1);
        model.setValueAt(mulaiDinas, rowIndex, 2);
        model.setValueAt(p24Terakhir, rowIndex, 3);
        model.setValueAt(p24Selanjutnya, rowIndex, 4);

        // Optional: update database jika ada
        // updateDatabase(nomor, jenis, mulaiDinas, p24Terakhir, p24Selanjutnya);
    }

    private void tambahData() {
    // Contoh data dummy
    model.addRow(new Object[]{1, "Armada A", 5});
    model.addRow(new Object[]{2, "Armada B", 3});

    // Refresh GUI (optional tapi aman)
    jTable1.revalidate();
    jTable1.repaint();
}
    // Method untuk menambahkan data dari InsertPenambahan (dengan parameter)
public void tambahData(String nomor, String jenis, String mulaiDinas, String p24Terakhir, String p24Selanjutnya) {
    model.addRow(new Object[]{nomor, jenis, mulaiDinas, p24Terakhir, p24Selanjutnya});
    jTable1.revalidate();
    jTable1.repaint();
}
     public void hapusBaris(int rowIndex) {
    if (rowIndex >= 0) {
        model.removeRow(rowIndex);
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris dulu!");
    }
}

     // Tombol Ubah

    public static void main(String[] args) {
    try {
        for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }

    java.awt.EventQueue.invokeLater(() -> new EksekutorFile().setVisible(true));
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambahkan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
